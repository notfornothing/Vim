" Create By JackSparrow"
" Get good ,get vim"
" 不要一味的折腾Vim,多敲才是硬道理"

autocmd BufWritePost $MYVIMRC source ~/.ideavimrc
autocmd BufWritePost $MYVIMRC source $MYVIMRC
"  使vimrc文件里面生效========================没用过

set keep-english-in-normal-and-restore-in-insert
" 设置自己的leader"
let mapleader=" "

"  行号设置"
set rnu
set nu
"设置高亮"
set hlsearch
" 自动定位到输入中的字符串，不需要回车搜索
set incsearch
"取消搜索后的高亮"
nnoremap <ESC> :nohlsearch<CR>
set ignorecase smartcase


" 没有递归禁用insert模式下方向键"
"inoremap <Up> <Nop>
"inoremap <Down> <Nop>
"inoremap <Left> <Nop>
"inoremap <Right> <Nop>
""  没有递归禁用normal模式下方向键"
"nnoremap <Up> <Nop>
"nnoremap <Down> <Nop>
"nnoremap <Left> <Nop>
"nnoremap <Right> <Nop>
"  上下移动且保持居中"
nnoremap j jzz
nnoremap k kzz
"  快速跳转 "
vnoremap J 3j
vnoremap K 3k
vnoremap j jzz
vnoremap k kzz
nnoremap G Gzz
nmap J 3j
nmap K 3k
"  行首和行尾 要弄成递归的,不然命令组合的时候不能调用 比如dL dH vL vH vJ vK"
nnoremap L $
noremap H ^
vnoremap L $
vnoremap H ^
map L $
map H ^
"  取消Ctrl+r redo按键"
"  这里大概是吧C-r默认的redo取消,然后C-r的意义还在,只是按C-r没用而已.所以下面的 U 就可以映射过去
unmap <C-r> " 我觉得也等于map <C-r> <Nop>"
"  redo"
"  这里换map不行 因为nnormap不会做进一步的映射 不会再对C-r做进一步扫描,一般用于重定义一个命令"
nnoremap U <C-r>
"  查找"
" nnoremap <C-f> /

set visualbell
set noerrorbells

" 预留50行 scroll offset"
set scrolloff=10


" IDEA method"
nnoremap <leader>r :action RunClass<CR>
nnoremap <leader>d :action Debug<CR>

nnoremap <leader>l :action NextTab<CR>
nnoremap <leader>h :action PreviousTab<CR>

nnoremap <Right> :action EditorCompleteStatement<CR>
inoremap <Right> <Esc>:action EditorCompleteStatement<CR>i
"nnoremap <leader>l gt
"nnoremap <leader>h gT

nnoremap <c-o> :action Back<cr>
nnoremap <c-i> :action Forward<cr>


" jump to next error
noremap <leader>j <ESC>:action GotoNextError<CR>
" jump to previous error，就近原则
noremap <leader>k <ESC>:action GotoPreviousError<CR>


nnoremap <leader>p <C-A-Left>
nnoremap <leader>n <C-A-Right>


" 打开网页
" nnoremap <leader>w :action WebOpenInAction<CR>


nnoremap <C-f> /
inoremap <C-f> <ESC>/
"解决IDEA系统剪贴板不能用的问题"
set clipboard+=unnamed


" IDEA JavaDoc"
" nnoremap <Leader>p <C-q>

" quit ==> close current window
nnoremap <leader>s :source ~/.ideavimrc<CR>
nnoremap <Leader>q :wq<Cr>
nnoremap <S>zz :q<Cr>

" Window operation
" (关于窗口操作)
" nnoremap <Leader>ww <C-w>w
" nnoremap <Leader>wc <C-W>c
" nnoremap <Leader>wo :only<Cr>
" nnoremap <Leader>wj <C-W>j
" nnoremap <Leader>wk <C-W>k
" nnoremap <Leader>wh <C-W>h
" nnoremap <Leader>wl <C-W>l
" nnoremap <Leader>ws <C-W>s
" nnoremap <Leader>w- <C-W>s
" nnoremap <Leader>wv <C-W>v
" nnoremap <Leader>w\| <C-W>v


set sneak

vmap S <Plug>VSurround

set esay-motion
set NERDTree
set surround
set argtextobj
set textobj-entire
set highlightedyank
set exchange
set easymotion
set multiple-cursors


" 重构"
nnoremap R :action RenameElement<CR>
nnoremap <C-S-v> <C-v>
nnoremap <C-v> p

nnoremap n nzz
nnoremap N Nzz


sethandler <C-2> a:ide
sethandler <C-S-2> a:ide
sethandler <C-S-6> a:ide
sethandler <C-;> a:vim
sethandler <C-S-;> a:vim
sethandler <C-A> a:vim
sethandler <C-B> a:ide
sethandler <C-C> a:ide
sethandler <C-D> a:vim
sethandler <C-E> a:ide
" sethandler <C-F> a:vim
sethandler <C-G> a:vim
sethandler <C-H> a:ide
sethandler <C-I> a:vim
sethandler <C-J> a:vim
sethandler <C-K> a:vim
sethandler <C-L> a:ide
sethandler <C-M> a:ide
sethandler <C-N> a:ide
sethandler <C-O> a:vim
sethandler <C-Q> a:ide
sethandler <C-R> a:ide
sethandler <C-S> a:ide
sethandler <C-T> a:vim
sethandler <C-U> a:vim
sethandler <C-V> a:ide
sethandler <C-S-V> a:vim
sethandler <C-W> a:vim
sethandler <C-X> a:vim
sethandler <C-Y> a:vim
sethandler <C-[> a:vim
sethandler <C-]> a:vim


nnoremap Q :q!<CR>